'''
题目: 孩子们的游戏(圆圈中最后剩下的数)

每年六一儿童节,牛客都会准备一些小礼物去看望孤儿院的小朋友,今年亦是如此。
HF作为牛客的资深元老,自然也准备了一些小游戏。其中,有个游戏是这样的:首先,让小朋友们围成一个大圈。
然后,他随机指定一个数m,让编号为0的小朋友开始报数。
每次喊到m-1的那个小朋友要出列唱首歌,然后可以在礼品箱中任意的挑选礼物,并且不再回到圈中,
从他的下一个小朋友开始,继续0...m-1报数....这样下去....直到剩下最后一个小朋友,可以不用表演,
并且拿到牛客名贵的“名侦探柯南”典藏版(名额有限哦!!^_^)。请你试着想下,哪个小朋友会得到这份礼品呢？
(注：小朋友的编号是从0到n-1)

如果没有小朋友，请返回-1
'''

# 约瑟夫环问题，每轮的编号都从0开始
         
# 当有n个人的时候，他们的编号依次是0、1、2、3、4、………、n-1
# 0...m-1报数
# 假设最后编号为x(n)的人会留下来
# 因为数到m-1的那个人会出列，那么此轮中编号为(m-1)%n的人会出列
# 编号为(m+0)%n的人将做为下一轮编号为0的人
# 此轮编号为(m+i)%n的人将做为下一轮编号为i的人…
# 因此当有n-1个人的时候，编号为i的人对应着上一轮编号为(m+i)%n的人。
# 假设此轮编号为x(n-1)的人最终会留下来。
# 因为编号为x(n-1)的人肯定对应着上一轮的编号x(n)，所以有x(n)=(m+x(n-1))%n
# 有了这个递推公式，那我们就可以一直递推到x(2)=(m+x(1))%2，而x(1)=0

class Solution:
    def LastRemaining_Solution(self, n, m):
        # write code here
        if n < 1 or m < 1:
            return -1
        
        if n == 1:
            return 0
        
        currentValue = 0

        for num in range(2, n+1):
            currentValue = (m + currentValue) % num
        
        return currentValue

if __name__ == "__main__":
    n = 5
    m = 3
    s = Solution()
    print(s.LastRemaining_Solution(n, m))